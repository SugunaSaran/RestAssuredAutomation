<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="60" passed="50" failed="10" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-09T22:11:28 EST" name="CucumberSuite" finished-at="2025-02-09T22:11:49 EST" duration-ms="20551">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.NoAuthScenarios@77c2494c]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserCreationRunner@6200f9cb]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.validRunner@6f4a47c7]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-02-09T22:11:28 EST" name="NoAuthTest" finished-at="2025-02-09T22:11:32 EST" duration-ms="3898">
      <class name="runners.NoAuthScenarios">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.NoAuthScenarios@77c2494c]" started-at="2025-02-09T22:11:28 EST" name="setUpClass" finished-at="2025-02-09T22:11:29 EST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2e096ac0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.NoAuthScenarios@77c2494c]" started-at="2025-02-09T22:11:29 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:31 EST" duration-ms="1924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Getting all users list without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking different requests without Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.NoAuthScenarios@77c2494c]" started-at="2025-02-09T22:11:31 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:31 EST" duration-ms="245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if the User is able to retrieve a user by User ID without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking different requests without Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.NoAuthScenarios@77c2494c]" started-at="2025-02-09T22:11:31 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:31 EST" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if the User is able to retrieve a user by User First Name without Authorization."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking different requests without Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.NoAuthScenarios@77c2494c]" started-at="2025-02-09T22:11:31 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:32 EST" duration-ms="780" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with all field values without Authorization"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking different requests without Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.NoAuthScenarios@77c2494c]" started-at="2025-02-09T22:11:32 EST" name="tearDownClass" finished-at="2025-02-09T22:11:32 EST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.NoAuthScenarios -->
    </test> <!-- NoAuthTest -->
    <test started-at="2025-02-09T22:11:32 EST" name="UserCreationTest" finished-at="2025-02-09T22:11:33 EST" duration-ms="1379">
      <class name="runners.UserCreationRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.UserCreationRunner@6200f9cb]" started-at="2025-02-09T22:11:32 EST" name="setUpClass" finished-at="2025-02-09T22:11:32 EST" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@d7c00de]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserCreationRunner@6200f9cb]" started-at="2025-02-09T22:11:32 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:33 EST" duration-ms="907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the user creation with valid zipcode in userAddress"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserCreationRunner@6200f9cb]" started-at="2025-02-09T22:11:33 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:33 EST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with all field values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.UserCreationRunner@6200f9cb]" started-at="2025-02-09T22:11:33 EST" name="tearDownClass" finished-at="2025-02-09T22:11:33 EST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.UserCreationRunner -->
    </test> <!-- UserCreationTest -->
    <test started-at="2025-02-09T22:11:33 EST" name="ValidTest" finished-at="2025-02-09T22:11:35 EST" duration-ms="1235">
      <class name="runners.validRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.validRunner@6f4a47c7]" started-at="2025-02-09T22:11:33 EST" name="setUpClass" finished-at="2025-02-09T22:11:33 EST" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@11fa11b2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.validRunner@6f4a47c7]" started-at="2025-02-09T22:11:33 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:34 EST" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Getting all users list without an endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.validRunner@6f4a47c7]" started-at="2025-02-09T22:11:34 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:34 EST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if the User is able to retrieve a user by User ID with Authorization."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.validRunner@6f4a47c7]" started-at="2025-02-09T22:11:34 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:34 EST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check  If the get request is able to retrieve  a user by an empty User ID."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.validRunner@6f4a47c7]" started-at="2025-02-09T22:11:34 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:34 EST" duration-ms="13" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if the User is able to retrieve a user by User First Name with Authorization."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.core.exception.CucumberException">
            <message>
              <![CDATA[Step [User Creates a GET request  with a valid User First Name] is defined with 1 parameters at 'stepdefinitions.GetRequestwithAuth.user_creates_a_get_request_with_a_valid_user_first_name_as(java.lang.String)'.
However, the gherkin step has 0 arguments.
Step text: User Creates a GET request  with a valid User First Name]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.core.exception.CucumberException: Step [User Creates a GET request  with a valid User First Name] is defined with 1 parameters at 'stepdefinitions.GetRequestwithAuth.user_creates_a_get_request_with_a_valid_user_first_name_as(java.lang.String)'.
However, the gherkin step has 0 arguments.
Step text: User Creates a GET request  with a valid User First Name
at io.cucumber.core.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:82)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:41)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:81)
at io.cucumber.core.runner.TestStep.run(TestStep.java:53)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:84)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:135)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.core.exception.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.validRunner@6f4a47c7]" started-at="2025-02-09T22:11:34 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:35 EST" duration-ms="285" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the updation of user with all field values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1449)
at stepdefinitions.PutRequestStep.the_response_status_code_should_be_and_the_response_body_should_have_auto_generated_user_id_address_id_creation_time_and_last_mod_time_field(PutRequestStep.java:83)
at ✽.The response status code should be 200 and the response body should have auto-generated user id, address id , creation_time and last_mod_time field.(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/putRequest.feature:11)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.validRunner@6f4a47c7]" started-at="2025-02-09T22:11:35 EST" name="tearDownClass" finished-at="2025-02-09T22:11:35 EST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.validRunner -->
    </test> <!-- ValidTest -->
    <test started-at="2025-02-09T22:11:35 EST" name="UserDeletionTest" finished-at="2025-02-09T22:11:49 EST" duration-ms="13997">
      <class name="runners.UserDeletionRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:35 EST" name="setUpClass" finished-at="2025-02-09T22:11:35 EST" duration-ms="49" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@29ddaa8e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:35 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:35 EST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if the User is able to delete a user by chaining User ID with Authorization."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:35 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:35 EST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if the User is able to delete a user by User First Name with Authorization."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:35 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:36 EST" duration-ms="278" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check if the User is able to delete a user by User First Name with Authorization."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [404] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [404] but found [200]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1439)
at stepdefinitions.DeleteRequestStep.the_delete_response_should_contain_a_status_code_as(DeleteRequestStep.java:84)
at ✽.The delete response should contain a status code as 200.(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/deleteRequest.feature:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:36 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:36 EST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check  If the get request is able to retrieve  a user with an invalid User ID."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:36 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:36 EST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check  If the get request is able to retrieve  a user with an invalid User ID."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:36 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:36 EST" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check  If the get request is able to retrieve  a user with an invalid User ID."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:36 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:37 EST" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:37 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:37 EST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check  If the get request is able to retrieve  a user with an invalid User FirstName."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:37 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:37 EST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check  If the get request is able to retrieve  a user with an invalid User FirstName."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:37 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:38 EST" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check  If the get request is able to retrieve  a user with an invalid User FirstName."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Get Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:38 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:38 EST" duration-ms="276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with all field values to an invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:38 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:38 EST" duration-ms="326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with all field values to an invalid endpoint"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:38 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:39 EST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with all field values with invalid JSON"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:39 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:39 EST" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with all field values with invalid JSON"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:39 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:39 EST" duration-ms="336" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with only mandatory field values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [500] but found [201]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [500] but found [201]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1439)
at stepdefinitions.PostRequestStep.the_response_status_code_should_be_a_response_body_should_have_auto_generated_user_id_address_id_creation_time_and_last_mod_time_field(PostRequestStep.java:111)
at ✽.The response status code should be 201. A response body should have auto-generated user id, address id , creation_time and last_mod_time field.(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/postRequest.feature:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:39 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:40 EST" duration-ms="283" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with only mandatory field values"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [500] but found [201]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [500] but found [201]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1439)
at stepdefinitions.PostRequestStep.the_response_status_code_should_be_a_response_body_should_have_auto_generated_user_id_address_id_creation_time_and_last_mod_time_field(PostRequestStep.java:111)
at ✽.The response status code should be 201. A response body should have auto-generated user id, address id , creation_time and last_mod_time field.(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/postRequest.feature:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:40 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:40 EST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with invalid user first name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:40 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:40 EST" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with invalid user first name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:40 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:40 EST" duration-ms="274" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of missing user First name field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [500] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [500] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1439)
at stepdefinitions.PostRequestStep.the_response_status_code_should_be_not_found(PostRequestStep.java:65)
at ✽.The response status code should be 400(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/postRequest.feature:51)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:40 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:41 EST" duration-ms="288" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of missing user First name field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [500] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [500] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1439)
at stepdefinitions.PostRequestStep.the_response_status_code_should_be_not_found(PostRequestStep.java:65)
at ✽.The response status code should be 400(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/postRequest.feature:51)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:41 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:41 EST" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of user First name field with empty string"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:41 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:41 EST" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of user First name field with empty string"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:41 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:42 EST" duration-ms="287" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with invalid user last name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [500] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [500] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1439)
at stepdefinitions.PostRequestStep.the_response_status_code_should_be_not_found(PostRequestStep.java:65)
at ✽.The response status code should be 400(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/postRequest.feature:71)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:42 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:42 EST" duration-ms="256" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with invalid user last name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [500] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [500] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1439)
at stepdefinitions.PostRequestStep.the_response_status_code_should_be_not_found(PostRequestStep.java:65)
at ✽.The response status code should be 400(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/postRequest.feature:71)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:42 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:42 EST" duration-ms="284" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of missing user last name field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [500] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [500] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1439)
at stepdefinitions.PostRequestStep.the_response_status_code_should_be_not_found(PostRequestStep.java:65)
at ✽.The response status code should be 400(file:///C:/Users/SMILE/selenium_course/RestAssuredAutomation/src/test/resources/features/postRequest.feature:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:42 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:42 EST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of user last name field with empty string"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:42 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:43 EST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with invalid contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:43 EST" duration-ms="354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of missing user contact number field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:43 EST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of contact number field with empty string"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:43 EST" duration-ms="262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of duplicate user contact number"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:43 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:44 EST" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with invalid user email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:44 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:44 EST" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the new user creation with invalid user email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:44 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:44 EST" duration-ms="252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of missing user user email id field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:44 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:45 EST" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of missing user user email id field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:45 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:45 EST" duration-ms="254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of email id field with empty string"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:45 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:45 EST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of email id field with empty string"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:45 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:45 EST" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of duplicate user email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:45 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:46 EST" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of duplicate user email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:46 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:46 EST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the user creation with invalid plotNumber in userAddress"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:46 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:46 EST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the user creation with invalid plotNumber in userAddress"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:46 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:46 EST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the user creation with invalid state in userAddress"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:46 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:47 EST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the user creation with invalid state in userAddress"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:47 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:47 EST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the user creation with invalid country in userAddress"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:47 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:47 EST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the user creation with invalid country in userAddress"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Post Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:47 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:48 EST" duration-ms="265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of duplicate user contact number while updating the record"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:48 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:48 EST" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the  user updation with invalid user email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:48 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:48 EST" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the  user updation with invalid user email id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:48 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:48 EST" duration-ms="279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of duplicate user email id while updating the record"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:48 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-02-09T22:11:49 EST" duration-ms="273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validation of duplicate user email id while updating the record"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Put Request with Authorization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.UserDeletionRunner@43c1b556]" started-at="2025-02-09T22:11:49 EST" name="tearDownClass" finished-at="2025-02-09T22:11:49 EST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.UserDeletionRunner -->
    </test> <!-- UserDeletionTest -->
  </suite> <!-- CucumberSuite -->
</testng-results>
